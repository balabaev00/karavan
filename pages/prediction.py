import streamlit as st
import os

from constants.constants import PREDICTION_PRODUCTS
from helpers.check_prepare_load_by_path import check_prepare_load_by_path
from prophet_helpers.build_future_dataframe import build_future_dataframe
from prophet_helpers.load_models import load_models

from helpers.display_prediction import display_prediction
from prophet_helpers.build_base_dataframe import build_base_dataframe


@st.cache_data()
def file_load():
    return check_prepare_load_by_path()


# –ü–æ–ª—É—á–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –∫–∞—Ç–∞–ª–æ–≥ (–≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ñ–∞–π–ª prediction.py)
current_directory = os.path.dirname(os.path.realpath(__file__))
model_file_path = os.path.join(current_directory, '..', 'prophet_helpers', 'models')

st.set_page_config(page_title="–ü—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–Ω–∏–µ", page_icon="üåç")

st.markdown("# –ü—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–Ω–∏–µ")
st.sidebar.header("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã")

df = file_load()
models = load_models(model_file_path)

select_product = st.selectbox(
    "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç",
    PREDICTION_PRODUCTS,
)

current_model = models[select_product]

predictions = st.sidebar.number_input(
    "–ö–æ–ª-–≤–æ –¥–Ω–µ–π –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è",
    value=15,
    placeholder="–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ"
)

future = build_future_dataframe(df, predictions)
print(df['–î–∞—Ç–∞'])
print(future)
forecast = current_model.predict(future)
total_count_prediction = int(forecast['yhat'][-predictions:].sum())

df_product = df.groupby(['–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞', '–ú–∞–≥–∞–∑–∏–Ω', '–î–∞—Ç–∞'])['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (—à—Ç/–∫–≥)'].sum().reset_index()
df_product = df_product.loc[df_product['–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞'] == select_product]

data2 = build_base_dataframe(df_product)

display_prediction(data2, forecast, predictions)

st.write('–ò—Ç–æ–≥–æ –∑–∞ ' + str(predictions) + ' –¥–Ω–µ–π –±—É–¥–µ—Ç –ø—Ä–æ–¥–∞–Ω–æ ' + str(total_count_prediction))
